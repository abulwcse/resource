// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: core/core.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSamplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID                 string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SamplesFilterFromDate     string `protobuf:"bytes,2,opt,name=samplesFilterFromDate,proto3" json:"samplesFilterFromDate,omitempty"`
	SamplesFilterToDate       string `protobuf:"bytes,3,opt,name=samplesFilterToDate,proto3" json:"samplesFilterToDate,omitempty"`
	SamplesFilterArea         string `protobuf:"bytes,4,opt,name=samplesFilterArea,proto3" json:"samplesFilterArea,omitempty"`
	SamplesFilterHabitatAssay string `protobuf:"bytes,5,opt,name=samplesFilterHabitatAssay,proto3" json:"samplesFilterHabitatAssay,omitempty"`
}

func (x *GetSamplesRequest) Reset() {
	*x = GetSamplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSamplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSamplesRequest) ProtoMessage() {}

func (x *GetSamplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSamplesRequest.ProtoReflect.Descriptor instead.
func (*GetSamplesRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{0}
}

func (x *GetSamplesRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetSamplesRequest) GetSamplesFilterFromDate() string {
	if x != nil {
		return x.SamplesFilterFromDate
	}
	return ""
}

func (x *GetSamplesRequest) GetSamplesFilterToDate() string {
	if x != nil {
		return x.SamplesFilterToDate
	}
	return ""
}

func (x *GetSamplesRequest) GetSamplesFilterArea() string {
	if x != nil {
		return x.SamplesFilterArea
	}
	return ""
}

func (x *GetSamplesRequest) GetSamplesFilterHabitatAssay() string {
	if x != nil {
		return x.SamplesFilterHabitatAssay
	}
	return ""
}

type GetTaxonomySummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID                 string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SamplesFilterFromDate     string `protobuf:"bytes,2,opt,name=samplesFilterFromDate,proto3" json:"samplesFilterFromDate,omitempty"`
	SamplesFilterToDate       string `protobuf:"bytes,3,opt,name=samplesFilterToDate,proto3" json:"samplesFilterToDate,omitempty"`
	SamplesFilterArea         string `protobuf:"bytes,4,opt,name=samplesFilterArea,proto3" json:"samplesFilterArea,omitempty"`
	SamplesFilterHabitatAssay string `protobuf:"bytes,5,opt,name=samplesFilterHabitatAssay,proto3" json:"samplesFilterHabitatAssay,omitempty"`
}

func (x *GetTaxonomySummaryRequest) Reset() {
	*x = GetTaxonomySummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaxonomySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaxonomySummaryRequest) ProtoMessage() {}

func (x *GetTaxonomySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaxonomySummaryRequest.ProtoReflect.Descriptor instead.
func (*GetTaxonomySummaryRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{1}
}

func (x *GetTaxonomySummaryRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetTaxonomySummaryRequest) GetSamplesFilterFromDate() string {
	if x != nil {
		return x.SamplesFilterFromDate
	}
	return ""
}

func (x *GetTaxonomySummaryRequest) GetSamplesFilterToDate() string {
	if x != nil {
		return x.SamplesFilterToDate
	}
	return ""
}

func (x *GetTaxonomySummaryRequest) GetSamplesFilterArea() string {
	if x != nil {
		return x.SamplesFilterArea
	}
	return ""
}

func (x *GetTaxonomySummaryRequest) GetSamplesFilterHabitatAssay() string {
	if x != nil {
		return x.SamplesFilterHabitatAssay
	}
	return ""
}

type GetMarkersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SampleID  string `protobuf:"bytes,2,opt,name=sampleID,proto3" json:"sampleID,omitempty"`
}

func (x *GetMarkersRequest) Reset() {
	*x = GetMarkersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkersRequest) ProtoMessage() {}

func (x *GetMarkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkersRequest.ProtoReflect.Descriptor instead.
func (*GetMarkersRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{2}
}

func (x *GetMarkersRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetMarkersRequest) GetSampleID() string {
	if x != nil {
		return x.SampleID
	}
	return ""
}

type GetFiltersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID             string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	SamplesFilterFromDate string `protobuf:"bytes,2,opt,name=samplesFilterFromDate,proto3" json:"samplesFilterFromDate,omitempty"`
	SamplesFilterToDate   string `protobuf:"bytes,3,opt,name=samplesFilterToDate,proto3" json:"samplesFilterToDate,omitempty"`
	SamplesFilterArea     string `protobuf:"bytes,4,opt,name=samplesFilterArea,proto3" json:"samplesFilterArea,omitempty"`
}

func (x *GetFiltersRequest) Reset() {
	*x = GetFiltersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFiltersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFiltersRequest) ProtoMessage() {}

func (x *GetFiltersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFiltersRequest.ProtoReflect.Descriptor instead.
func (*GetFiltersRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{3}
}

func (x *GetFiltersRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetFiltersRequest) GetSamplesFilterFromDate() string {
	if x != nil {
		return x.SamplesFilterFromDate
	}
	return ""
}

func (x *GetFiltersRequest) GetSamplesFilterToDate() string {
	if x != nil {
		return x.SamplesFilterToDate
	}
	return ""
}

func (x *GetFiltersRequest) GetSamplesFilterArea() string {
	if x != nil {
		return x.SamplesFilterArea
	}
	return ""
}

type EmptyParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyParamRequest) Reset() {
	*x = EmptyParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyParamRequest) ProtoMessage() {}

func (x *EmptyParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyParamRequest.ProtoReflect.Descriptor instead.
func (*EmptyParamRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{4}
}

type GetProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{5}
}

func (x *GetProjectRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

type GetChartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID    string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	ChartID      string `protobuf:"bytes,2,opt,name=chartID,proto3" json:"chartID,omitempty"`
	HabitatAssay string `protobuf:"bytes,3,opt,name=habitatAssay,proto3" json:"habitatAssay,omitempty"`
	FromDate     string `protobuf:"bytes,4,opt,name=fromDate,proto3" json:"fromDate,omitempty"`
	ToDate       string `protobuf:"bytes,5,opt,name=toDate,proto3" json:"toDate,omitempty"`
}

func (x *GetChartRequest) Reset() {
	*x = GetChartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChartRequest) ProtoMessage() {}

func (x *GetChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChartRequest.ProtoReflect.Descriptor instead.
func (*GetChartRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{6}
}

func (x *GetChartRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GetChartRequest) GetChartID() string {
	if x != nil {
		return x.ChartID
	}
	return ""
}

func (x *GetChartRequest) GetHabitatAssay() string {
	if x != nil {
		return x.HabitatAssay
	}
	return ""
}

func (x *GetChartRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetChartRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type GetCustomerProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerID string `protobuf:"bytes,1,opt,name=customerID,proto3" json:"customerID,omitempty"`
}

func (x *GetCustomerProjectRequest) Reset() {
	*x = GetCustomerProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerProjectRequest) ProtoMessage() {}

func (x *GetCustomerProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerProjectRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerProjectRequest) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{7}
}

func (x *GetCustomerProjectRequest) GetCustomerID() string {
	if x != nil {
		return x.CustomerID
	}
	return ""
}

type StandardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *StandardReply) Reset() {
	*x = StandardReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_core_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardReply) ProtoMessage() {}

func (x *StandardReply) ProtoReflect() protoreflect.Message {
	mi := &file_core_core_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardReply.ProtoReflect.Descriptor instead.
func (*StandardReply) Descriptor() ([]byte, []int) {
	return file_core_core_proto_rawDescGZIP(), []int{8}
}

func (x *StandardReply) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_core_core_proto protoreflect.FileDescriptor

var file_core_core_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65,
	0x61, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79, 0x22,
	0x8d, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65,
	0x61, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79, 0x22,
	0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x44, 0x22, 0xc7,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x68, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x68, 0x61, 0x62, 0x69, 0x74, 0x61, 0x74, 0x41, 0x73, 0x73, 0x61, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x94,
	0x04, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x15, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x62, 0x75, 0x6c, 0x77, 0x63, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_core_core_proto_rawDescOnce sync.Once
	file_core_core_proto_rawDescData = file_core_core_proto_rawDesc
)

func file_core_core_proto_rawDescGZIP() []byte {
	file_core_core_proto_rawDescOnce.Do(func() {
		file_core_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_core_proto_rawDescData)
	})
	return file_core_core_proto_rawDescData
}

var file_core_core_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_core_core_proto_goTypes = []interface{}{
	(*GetSamplesRequest)(nil),         // 0: core.GetSamplesRequest
	(*GetTaxonomySummaryRequest)(nil), // 1: core.GetTaxonomySummaryRequest
	(*GetMarkersRequest)(nil),         // 2: core.GetMarkersRequest
	(*GetFiltersRequest)(nil),         // 3: core.GetFiltersRequest
	(*EmptyParamRequest)(nil),         // 4: core.EmptyParamRequest
	(*GetProjectRequest)(nil),         // 5: core.GetProjectRequest
	(*GetChartRequest)(nil),           // 6: core.GetChartRequest
	(*GetCustomerProjectRequest)(nil), // 7: core.GetCustomerProjectRequest
	(*StandardReply)(nil),             // 8: core.StandardReply
}
var file_core_core_proto_depIdxs = []int32{
	4, // 0: core.Core.GetCustomers:input_type -> core.EmptyParamRequest
	7, // 1: core.Core.GetCustomerProject:input_type -> core.GetCustomerProjectRequest
	5, // 2: core.Core.GetProject:input_type -> core.GetProjectRequest
	6, // 3: core.Core.GetChart:input_type -> core.GetChartRequest
	3, // 4: core.Core.GetFilters:input_type -> core.GetFiltersRequest
	2, // 5: core.Core.GetMarkers:input_type -> core.GetMarkersRequest
	1, // 6: core.Core.GetTaxonomySummary:input_type -> core.GetTaxonomySummaryRequest
	0, // 7: core.Core.GetSamples:input_type -> core.GetSamplesRequest
	8, // 8: core.Core.GetCustomers:output_type -> core.StandardReply
	8, // 9: core.Core.GetCustomerProject:output_type -> core.StandardReply
	8, // 10: core.Core.GetProject:output_type -> core.StandardReply
	8, // 11: core.Core.GetChart:output_type -> core.StandardReply
	8, // 12: core.Core.GetFilters:output_type -> core.StandardReply
	8, // 13: core.Core.GetMarkers:output_type -> core.StandardReply
	8, // 14: core.Core.GetTaxonomySummary:output_type -> core.StandardReply
	8, // 15: core.Core.GetSamples:output_type -> core.StandardReply
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_core_core_proto_init() }
func file_core_core_proto_init() {
	if File_core_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSamplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaxonomySummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarkersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFiltersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_core_core_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_core_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_core_proto_goTypes,
		DependencyIndexes: file_core_core_proto_depIdxs,
		MessageInfos:      file_core_core_proto_msgTypes,
	}.Build()
	File_core_core_proto = out.File
	file_core_core_proto_rawDesc = nil
	file_core_core_proto_goTypes = nil
	file_core_core_proto_depIdxs = nil
}
